% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spark_td.R
\name{spark_write_td}
\alias{spark_write_td}
\title{Write a Spark DataFrame to Treasure Data}
\usage{
spark_write_td(x, name, mode = NULL, options = list(),
  partition_by = NULL, ...)
}
\arguments{
\item{x}{A Spark DataFrame or dplyr operation}

\item{name}{The name to write table.}

\item{mode}{A \code{character} element. Specifies the behavior when data or
table already exists. Supported values include: 'error', 'append', 'overwrite' and
'ignore'. Notice that 'overwrite' will also change the column structure.}

\item{options}{A list of strings with additional options.}

\item{partition_by}{A \code{character} vector. Partitions the output by the given columns on the file system.}

\item{...}{Optional arguments; currently unused.}
}
\description{
Write a Spark DataFrame to Treasure Data
}
\examples{
\dontrun{
config <- spark_config()

config$spark.td.apikey <- Sys.getenv("TD_API_KEY")
config$spark.serializer <- "org.apache.spark.serializer.KryoSerializer"
config$spark.sql.execution.arrow.enabled <- "true"

sc <- spark_connect(master = "local", config = config)

spark_mtcars <- dplyr::copy_to(sc, mtcars, "spark_mtcars", overwrite = TRUE)

spark_write_td(
  spark_mtcars,
  name = "mydb.mtcars",
  mode = "overwrite"
)
}

}
\seealso{
Other Spark serialization routines: \code{\link{spark_read_td}}
}
\concept{Spark serialization routines}
